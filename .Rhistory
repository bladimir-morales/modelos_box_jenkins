#library(readxl)
library(tidyverse)
#library(dygraphs)
#library(fpp)
library(forecast)
library(tseries)
forecast::autoplot(serie,series = "ICAP")+
ggtitle("Indice mensual de consumo de agua potable en Bolivia: enero 1990 a julio 2021 \n
(año base 1990=100)")+
xlab("Año")+ylab("ICAP")+
theme(legend.position = "none")+
scale_color_manual(values="#2B7DFF")
serie_ent<-ts(agua$agua,start = c(1990,1),end = c(2019,12), frequency=12)
serie_test<-ts(agua$agua[361:379],start = c(2020,1), frequency=12)
autoplot(serie_ent,series = "ICAP \nentrenamiento")+
autolayer(serie_test,series="ICAP \ntest")+
ggtitle("Conjunto de entrenamiento y test del ICAP")+
xlab("Año")+ylab("ICAP")+
scale_color_manual(values=c("#469F4B","#A462EF"))
acf(serie_ent)
adf.test(serie_ent,type="Box-Pierce")
adf.test(serie_ent)
adf.test(serie_ent,k=12)
kpss.test(serie_ent)
?kpss.test
kpss.test(serie_ent,null=c("Level"))
kpss.test(serie_ent,null=c("Level"),lshort = F)
kpss.test(serie_ent,lshort = F)
kpss.test(serie_ent,lshort = T)
kpss.test(serie_ent,null=c("Trend"),lshort = F)
kpss.test(serie_ent,null=c("Trend"))
kpss.test(serie_ent,null=c("Trend"),lshort = T)
kpss.test(serie_ent,null=c("Trend"),lshort = 12)
kpss.test(serie_ent,null=c("Trend"),lshort = F)
log_serie_ent<-log(serie_ent)
autoplot(log_serie_ent)
autoplot(log_serie_ent) +
autolayer(serie_ent)
autoplot(log_serie_ent)
autoplot(serie_ent,series = "ICAP \nentrenamiento")+
autolayer(serie_test,series="ICAP \ntest")+
ggtitle("Conjunto de entrenamiento y test del ICAP")+
xlab("Año")+ylab("ICAP")+
scale_color_manual(values=c("#469F4B","#A462EF"))
ggseasonplot(agua_serie,main="Estacionalidad del Indice Mensual de Consumo de Agua Potable",
year.labels = T,xlab="Mes",ylab="ICAP")
monthplot(agua_serie,ylab="",main="Estacionalidad del Indice Mensual de Consumo de Agua Potable",
labels = c("Ene","Feb","Mar","Abr","May","Jun","Jul","Ago","Sep","Oct","Nov","Dic"),
xlab="Mes")
dif_log_serie_ent<-diff(log_serie_ent)
autoplot(dif_log_serie_ent)
dif12_log_serie_ent<-diff(log_serie_ent,lag=12)
autoplot(dif12_log_serie_ent)
dif_dif12_log_serie_ent<-diff(dif12_log_serie_ent,lag=1)
autoplot(dif_dif12_log_serie_ent)
BoxCox.lambda(serie_ent)
boxcox(serie_ent~1,interp=T,lambda=seq(-2, 2, length = 20), plot=T)
library(MASS)
boxcox(serie_ent~1,interp=T,lambda=seq(-2, 2, length = 20), plot=T)
boxcox(serie_ent~1,interp=T,lambda=seq(-1, 1, length = 20), plot=T)
valor<-boxcox(serie_ent~1,interp=T,lambda=seq(-1, 1, length = 20), plot=T)
which.max(valor$y)
valor$x[70]
BoxCox.lambda(serie_ent,"loglik")
BoxCox.lambda(serie_ent,"guerrero")
?boxcox()
boxcox(serie_ent~1,interp=F,lambda=seq(-1, 1, length = 20), plot=T)
boxcox(serie_ent~1,interp=F,lambda=seq(-1, 1, length = 20), plot=T)
valor<-boxcox(serie_ent~1,interp=F,lambda=seq(-1, 1, length = 20), plot=T)
which.max(valor$y)
valor$x[14]
log_serie_ent<-log(serie_ent)
autoplot(log_serie_ent)
log_serie_ent<-log(serie_ent)
autoplot(log_serie_ent)
log_serie_ent<-log(serie_ent)
acf(serie_ent)
autoplot(serie_ent,series = "ICAP \nentrenamiento")+
ggtitle("Conjunto de entrenamiento y test del ICAP")+
xlab("Año")+ylab("ICAP")+
scale_color_manual(values=c("#469F4B","#A462EF"))
autoplot(serie_ent,series = "ICAP \nentrenamiento")+
autolayer(serie_test,series="ICAP \ntest")+
ggtitle("Conjunto de entrenamiento y test del ICAP")+
xlab("Año")+ylab("ICAP")+
scale_color_manual(values=c("#469F4B"))
autoplot(serie_ent,series = "ICAP \nentrenamiento")+
ggtitle("Conjunto de entrenamiento y test del ICAP")+
xlab("Año")+ylab("ICAP")+
scale_color_manual(values=c("#469F4B"))
autoplot(serie_ent,series = "ICAP \nentrenamiento")+
ggtitle("Conjunto de entrenamiento y test del ICAP")+
xlab("Año")+ylab("ICAP")+
scale_color_manual(values=c("#469F4B"))+
theme(legend.position = "bottom")
autoplot(serie_ent,series = "ICAP \nentrenamiento")+
ggtitle("Conjunto de entrenamiento y test del ICAP")+
xlab("Año")+ylab("ICAP")+
scale_color_manual(values=c("#469F4B"))+
theme(legend.position = "none")
autoplot(serie_ent,series = "ICAP \nentrenamiento")+
ggtitle("ICAP entrenamiento")+
xlab("Año")+ylab("ICAP")+
scale_color_manual(values=c("#469F4B"))+
theme(legend.position = "none")
autoplot(serie_ent)+
ggtitle("ICAP entrenamiento")+
xlab("Año")+ylab("ICAP")+
scale_color_manual(values=c("#469F4B"))
autoplot(serie_ent)+
ggtitle("ICAP entrenamiento")+
xlab("Año")+ylab("ICAP")+
scale_color_manual(values=c("#469F4B"))
autoplot(serie_ent,series = "ICAP \nentrenamiento")+
ggtitle("ICAP entrenamiento")+
xlab("Año")+ylab("ICAP")+
scale_color_manual(values=c("#469F4B"))+
theme(legend.position = "none")
?descompose
??descompose
decompose(serie_ent)
plot(decompose(serie_ent))
plot(decompose(serie_ent,"multiplicative"))
descomposicion<-decompose(serie_ent,type=c("additive"))
descomposicion
descomposicion<-decompose(serie_ent,type=c("additive")) %>%
rename(ICAP=x,Tendencia=trend,Estacionalidad=seasonal,Aleatoria=random)
descomposicion<-fortify(decompose(serie_ent,type=c("additive")))
descomposicion<-fortify(decompose(serie_ent,type=c("additive")))
library(ggfortify)
install.packages("ggfortify")
library(ggfortify)
descomposicion<-fortify(decompose(serie_ent,type=c("additive")))
descomposicion
View(descomposicion)
descomposicion<-fortify(decompose(serie_ent,type=c("additive"))) %>%
rename(ICAP=Data,Tendencia=trend,Estacionalidad=seasonal,Irregular=remainder)
plot(descomposicion)
autoplot(descomposicion)
descomposicion<-fortify(decompose(serie_ent,type=c("additive"))) %>%
rename(ICAP=Data,Tendencia=trend,Estacionalidad=seasonal,Irregular=remainder)
descomposicion<-decompose(serie_ent,type=c("additive"))
autoplot(descomposicion)
plot(descomposicion)
descomposicion$figure
descomposicion$observados<-descomposicion$x
descomposicion$observados
plot(descomposicion)
descomposicion<-decompose(serie_ent,type=c("additive"))
plot(descomposicion)
autoplot(serie_ent,series = "ICAP \nentrenamiento")+
ggtitle("ICAP entrenamiento")+
xlab("Año")+ylab("ICAP")+
scale_color_manual(values=c("#469F4B"))+
theme(legend.position = "none")
autoplot(serie_ent,series = "ICAP \nentrenamiento")+
ggtitle("ICAP entrenamiento")+
xlab("Año")+ylab("ICAP")+
scale_color_manual(values=c("#469F4B"))+
theme(legend.position = "none")
autoplot(serie_ent,series = "ICAP \nentrenamiento")+
ggtitle("ICAP entrenamiento")+
xlab("Año")+ylab("ICAP")+
scale_color_manual(values=c("#469F4B"))
descomposicion<-decompose(serie_ent)
plot(descomposicion)
acf(serie_ent)
adf.test(serieent)
adf.test(serie_ent)
adf.test(serie_ent)
adf.test(serie_ent)
adf.test(serie_ent,k=12)
adf.test(serie_ent,k=8)
adf.test(serie_ent,k=9)
adf.test(serie_ent,k=10)
adf.test(serie_ent,k=12)
adf.test(serie_ent,k=12)
adf.test(serie_ent,k=9)
x<-adf.test(serie_ent,k=9)
x$p.value
for(i in 1:15){
test<-adf.test(serie_ent,k=i)
test$p.value
}
x<-adf.test(serie_ent,k=6)
x$p.value
for(i in 1:15){
test<-adf.test(serie_ent,k=i)
print(test$p.value)
}
for(i in 1:15){
test<-adf.test(serie_ent,k=i)
print("Rezagos: ",i,"- P-valor:",test$p.value)
}
print("Rezagos: ",i,", P-valor:",test$p.value)
for(i in 1:15){
test<-adf.test(serie_ent,k=i)
print("Rezagos: ",i,", P-valor:",test$p.value)
}
x<-adf.test(serie_ent,k=6)
x$p.value
print(paste0("Rezagos: ",i,", P-valor:",test$p.value))
for(i in 1:15){
test<-adf.test(serie_ent,k=i)
print(paste0("Rezagos: ",i,", P-valor:",test$p.value))
}
for(i in 1:24){
test<-adf.test(serie_ent,k=i)
print(paste0("Nro. de rezagos: ",i,", P-valor:",test$p.value))
}
facp(serie_ent)
pacf(serie_ent)
acf(serie_ent)
acf(serie_ent,lag=50)
acf(serie_ent,lag=100)
pacf(serie_ent,lag=100)
pacf(serie_ent)
plot(descomposicion)
plot(descomposicion$trend)
autoplot(serie_ent,series = "ICAP \nentrenamiento")+
autolayer(descomposicion$trend,series="Tendencia")
ggtitle("ICAP entrenamiento")+
xlab("Año")+ylab("ICAP")+
scale_color_manual(values=c("#A4C4FC","#E80808"))+
theme(legend.position = "bottom")
descomposicion$trend
serie_ent
autoplot(serie_ent,series = "ICAP \nentrenamiento")+
autolayer(descomposicion$trend,series="Tendencia")
autoplot(serie_ent,series = "ICAP \nentrenamiento")+
autolayer(descomposicion$trend,series="Tendencia")+
ggtitle("ICAP entrenamiento")+
xlab("Año")+ylab("ICAP")+
scale_color_manual(values=c("#A4C4FC","#E80808"))+
theme(legend.position = "bottom")
class(serie_ent)
class(descomposicion$trend)
autoplot(serie_ent,series = "ICAP \nentrenamiento")+
autolayer(descomposicion$trend,series="Tendencia")+
ggtitle("Tendencia del Indice mensual de consumo de agua potable en Bolivia")+
xlab("Año")+ylab("ICAP")+
scale_color_manual(values=c("#A4C4FC","#E80808"))
autoplot(serie_ent,series = "ICAP \nentrenamiento")+
autolayer(ifelse(is.na(descomposicion$trend),0,descomposicion$trend),series="Tendencia")+
ggtitle("Tendencia del Indice mensual de consumo de agua potable en Bolivia")+
xlab("Año")+ylab("ICAP")+
scale_color_manual(values=c("#A4C4FC","#E80808"))+
theme(legend.position = "bottom")
ifelse(is.na(descomposicion$trend),0,descomposicion$trend)
serie_ent
tendencia<-ts(ifelse(is.na(descomposicion$trend),0,descomposicion$trend),start = c(1990,1),frequency = 12)
tendencia
autoplot(serie_ent,series = "ICAP \nentrenamiento")+
autolayer(tendencia,series="Tendencia")+
ggtitle("Tendencia del Indice mensual de consumo de agua potable en Bolivia")+
xlab("Año")+ylab("ICAP")+
scale_color_manual(values=c("#A4C4FC","#E80808"))+
theme(legend.position = "bottom")
tendencia<-ma(serie_ent,order=12)
tendencia
autoplot(serie_ent,series = "ICAP \nentrenamiento")+
autolayer(tendencia,series = "Tendencia")+
ggtitle("Tendencia del Indice mensual de consumo de agua potable en Bolivia")+
xlab("Año")+ylab("ICAP")+
scale_color_manual(values=c("#A4C4FC","#E80808"))+
theme(legend.position = "bottom")
autoplot(serie_ent,series = "ICAP \nentrenamiento")+
autolayer(tendencia,series = "Tendencia")+
ggtitle("Tendencia del Indice mensual de consumo de agua potable en Bolivia")+
xlab("Año")+ylab("ICAP")+
scale_color_manual(values=c("#A4C4FC","#E80808"))+
theme(legend.position = "bottom")
serie_ent
tendencia
autoplot(serie_ent,series = "ICAP \nentrenamiento")+
autolayer(tendencia,series = "Tendencia")+
ggtitle("Tendencia del Indice mensual de consumo de agua potable en Bolivia")+
xlab("Año")+ylab("ICAP")+
scale_color_manual(values=c("#A4C4FC","#E80808"))
descomposicion<-decompose(serie_ent)
tendencia<-ma(serie_ent,order=12)
autoplot(serie_ent,series = "ICAP \nentrenamiento")+
#autolayer(tendencia,series = "Tendencia")+
ggtitle("Tendencia del Indice mensual de consumo de agua potable en Bolivia")+
xlab("Año")+ylab("ICAP")+
scale_color_manual(values=c("#A4C4FC","#E80808"))+
theme(legend.position = "bottom")
tendencia<-ma(serie_ent,order=12)
autoplot(serie_ent,series = "ICAP \nentrenamiento")+
autolayer(tendencia,series = "Tendencia")+
ggtitle("Tendencia del Indice mensual de consumo de agua potable en Bolivia")+
xlab("Año")+ylab("ICAP")+
scale_color_manual(values=c("#A4C4FC","#E80808"))+
theme(legend.position = "bottom")
class(tendencia)
autoplot(serie,series = "ICAP \nentrenamiento")+
autolayer(tendencia,series = "Tendencia")+
ggtitle("Tendencia del Indice mensual de consumo de agua potable en Bolivia")+
xlab("Año")+ylab("ICAP")+
scale_color_manual(values=c("#A4C4FC","#E80808"))+
theme(legend.position = "bottom")
tendencia<-ma(serie,order=12)
autoplot(serie,series = "ICAP \nentrenamiento")+
autolayer(tendencia,series = "Tendencia")+
ggtitle("Tendencia del Indice mensual de consumo de agua potable en Bolivia")+
xlab("Año")+ylab("ICAP")+
scale_color_manual(values=c("#A4C4FC","#E80808"))+
theme(legend.position = "bottom")
serie_ent
tendencia<-ma(serie_ent,order=12)
tendencia
autoplot(serie_ent, series = "ICAP \nentrenamiento")+
autolayer(tendencia,series = "Tendencia")
knitr::opts_chunk$set(echo = TRUE)
#library(readxl)
library(tidyverse)
#library(dygraphs)
#library(fpp)
library(forecast)
library(tseries)
library(ggfortify)
url<-"https://raw.githubusercontent.com/bladimir-morales/series_de_tiempo/main/data/agua.txt"
agua<-read.table(url,head=T)
serie<-ts(agua$agua,start = c(1990,1),frequency = 12)
forecast::autoplot(serie,series = "ICAP")+
ggtitle("Indice mensual de consumo de agua potable en Bolivia: enero 1990 a julio 2021 \n
(año base 1990=100)")+
xlab("Año")+ylab("ICAP")+
theme(legend.position = "none")+
scale_color_manual(values="#2B7DFF")
autoplot(serie,series = "ICAP")+
ggtitle("Indice mensual de consumo de agua potable en Bolivia: enero 1990 a julio 2021 \n
(año base 1990=100)")+
xlab("Año")+ylab("ICAP")+
theme(legend.position = "none")+
scale_color_manual(values="#2B7DFF")
autoplot(serie,series = "ICAP")+
ggtitle("Indice mensual de consumo de agua potable en Bolivia: enero 1990 a julio 2021 \n
(año base 1990=100)")+
xlab("Año")+ylab("ICAP")+
#theme(legend.position = "none")+
scale_color_manual(values="#2B7DFF")
autoplot(serie,series = "ICAP")+
ggtitle("Indice mensual de consumo de agua potable en Bolivia: enero 1990 a julio 2021 \n
(año base 1990=100)")+
xlab("Año")+ylab("ICAP")+
scale_color_manual(values="#2B7DFF")
serie
knitr::opts_chunk$set(echo = TRUE)
#library(readxl)
library(tidyverse)
#library(dygraphs)
#library(fpp)
library(forecast)
library(tseries)
url<-"https://raw.githubusercontent.com/bladimir-morales/series_de_tiempo/main/data/agua.txt"
agua<-read.table(url,head=T)
serie<-ts(agua$agua,start = c(1990,1),frequency = 12)
autoplot(serie,series = "ICAP")+
ggtitle("Indice mensual de consumo de agua potable en Bolivia: enero 1990 a julio 2021 \n
(año base 1990=100)")+
xlab("Año")+ylab("ICAP")+
scale_color_manual(values="#2B7DFF")
knitr::opts_chunk$set(echo = TRUE)
#library(readxl)
library(tidyverse)
#library(dygraphs)
#library(fpp)
library(forecast)
library(tseries)
url<-"https://raw.githubusercontent.com/bladimir-morales/series_de_tiempo/main/data/agua.txt"
agua<-read.table(url,head=T)
serie<-ts(agua$agua,start = c(1990,1),frequency = 12)
autoplot(serie,series = "ICAP")+
ggtitle("Indice mensual de consumo de agua potable en Bolivia: enero 1990 a julio 2021 \n
(año base 1990=100)")+
xlab("Año")+ylab("ICAP")+
scale_color_manual(values="#2B7DFF")
autoplot(serie,series = "ICAP")+
ggtitle("Indice mensual de consumo de agua potable en Bolivia: enero 1990 a julio 2021 \n
(año base 1990=100)")+
xlab("Año")+ylab("ICAP")+
scale_color_manual(values="blue")
#library(readxl)
library(tidyverse)
knitr::opts_chunk$set(echo = TRUE,warning = FALSE)
library(tidyverse)
#library(fpp)
library(forecast)
library(tseries)
library(lmtest)#durbin_watson
url<-"https://raw.githubusercontent.com/bladimir-morales/modelos_box_jenkins/main/agua.txt?token=AOEHMZISFJOYBMKYVNZE2RLB2VRR4"
agua<-read.table(url,head=T)
serie<-ts(agua$agua,start = c(1990,1),frequency = 12)
autoplot(serie,series = "ICAP")+
ggtitle("Indice mensual de consumo de agua potable en Bolivia: enero 1990 a julio 2021 \n
(año base 1990=100)")+
xlab("Año")+ylab("ICAP")+
scale_color_manual(values="#2B7DFF")+
theme(legend.position = "none")
serie_ent<-ts(agua$agua,start = c(1990,1),end = c(2019,12), frequency=12)
serie_test<-ts(agua$agua[361:379],start = c(2020,1), frequency=12)
autoplot(serie_ent,series = "ICAP entrenamiento")+
autolayer(serie_test,series="ICAP test")+
ggtitle("Conjunto de entrenamiento y test del ICAP")+
xlab("Año")+ylab("ICAP")+
scale_color_manual(values=c("#469F4B","#A462EF"))+
theme(legend.position = "bottom",legend.title = element_blank() )
autoplot(serie_ent,series = "ICAP entrenamiento")+
ggtitle("ICAP entrenamiento")+
xlab("Año")+ylab("ICAP")+
scale_color_manual(values=c("#469F4B"))+
theme(legend.position = "none")
descomposicion<-decompose(serie_ent)
plot(descomposicion)
autoplot(serie_ent, series = "ICAP entrenamiento")+
autolayer(descomposicion$trend,series = "Tendencia")+
ggtitle("Tendencia del ICAP de entrenamiento")+
xlab("Año")+ylab("ICAP")+
scale_color_manual(values=c("#A4C4FC","#E80808"))+
theme(legend.position = "bottom",legend.title = element_blank())
autoplot(descomposicion$seasonal)+
ggtitle("Estacionalidad de la descomposición ICAP")+
xlab("Año")+ylab("Estacionalidad ICAP")
log_serie_ent<-log(serie_ent)
autoplot(log_serie_ent,series="Logaritmo de ICAP entrenamiento")+
ggtitle("Logaritmo del ICAP de entrenamiento")+
xlab("Año")+ylab("Log ICAP")+
scale_color_manual(values=c("#469F4B"))+
theme(legend.position = "none")
dif_log_serie_ent<-diff(log_serie_ent,1)
autoplot(dif_log_serie_ent)+
ggtitle("Diferencia_1 del Log-ICAP de entrenamiento")+
xlab("Año")+ylab("Dif1 Log ICAP")+
scale_color_manual(values=c("#469F4B"))+
theme(legend.position = "none")
dif12_dif_log_serie_ent<-diff(dif_log_serie_ent,12)
autoplot(dif12_dif_log_serie_ent)+
ggtitle("Diferencia_12 de la Diferencia_1 del Log-ICAP de entrenamiento")+
xlab("Año")+ylab("Dif12 Dif1 Log ICAP")+
scale_color_manual(values=c("#469F4B"))+
theme(legend.position = "none")
significancia<-function(modelo,se_modelo){
prueba_coef<-c()
for (i in 1:length(modelo)) {
prueba_coef[i]<-modelo[i]/sqrt(se_modelo[i,i])
print(paste0(names(modelo[i])," :  ", prueba_coef[i]))
}
}
sarima1<-Arima(log_serie_ent,order = c(2,1,1),seasonal = c(1,0,1))
sarima1
significancia(sarima1$coef,sarima1$var.coef)
sarima1<-Arima(log_serie_ent,order = c(1,1,1),seasonal = c(1,0,1))
sarima1
sarima1<-Arima(log_serie_ent,order = c(1,1,1),seasonal = c(1,0,1))
sarima1
significancia(sarima1$coef,sarima1$var.coef)
sarima1<-Arima(log_serie_ent,order = c(0,1,1),seasonal = c(1,0,1))
sarima1
significancia(sarima1$coef,sarima1$var.coef)
AIC_sarima1<-sarima1$aic
AIC_sarima1
sarima2<-Arima(log_serie_ent,order = c(4,1,1),seasonal = c(0,0,1))
sarima2
significancia(sarima2$coef,sarima2$var.coef)
sarima2<-Arima(log_serie_ent,order = c(1,1,1),seasonal = c(0,0,1))
sarima2
significancia(sarima2$coef,sarima2$var.coef)
AIC_sarima2<-sarima2$aic
AIC_sarima2
sarima1<-Arima(log_serie_ent,order = c(0,1,1),seasonal = c(1,0,1))
sarima1
AIC_sarima1
AIC_sarima2
AIC_arima_automatico
arima_automatico<-auto.arima(log_serie_ent)
arima_automatico
significancia(arima_automatico$coef,arima_automatico$var.coef)
AIC_arima_automatico<-arima_automatico$aic
AIC_arima_automatico
AIC_sarima1
AIC_sarima2
AIC_arima_automatico
prediccion<-forecast(sarima1,19)
prediccion
autoplot(log_serie_ent,series="log ICAP")+
autolayer(sarima1$fitted,series = "SARIMA(0,1,1)(1,0,1)")+
autolayer(prediccion,series = "Predicción")+
autolayer(log(serie_test),series = "log ICAP test")+
ggtitle("Log ICAP y Modelo Ajustado más predicción")+
xlab("Año")+ylab("log ICAP")+
scale_color_manual(values=c("#A4C4FC","#0D139B","#189B0D","#E80808"))+
theme(legend.position = "bottom",legend.title = element_blank() )
mape<-function(y,f){
pe<-((y-f)/y)
mape1<-(sum(abs(pe))/length(y))*100
return(mape1)
}
mape(log(serie_test),prediccion$mean)
mape<-function(y,f){
pe<-((y-f)/y)
mape1<-(sum(abs(pe))/length(y))*100
return(mape1)
}
mape((serie_test),prediccion$mean)
serie_test
mape((serie_test),exp(prediccion$mean))
mape_test<-mape(serie_test,exp(prediccion$mean))
mape_test
mape(log(serie_test),prediccion$mean)
mape_test<-mape(serie_test,exp(prediccion$mean))
mape_test
